{"version":3,"sources":["components/GoodsList/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","API_URL","App","useState","setGoods","type","onClick","fetch","then","response","json","newGoods","slice","filter","console","log","ReactDOM","render","document","getElementById"],"mappings":"yPAOaA,EAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,MAEA,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QACxBJ,UAAU,aAHZ,SAKGE,EAAKG,MAJDH,EAAKI,U,OCZdC,EAAO,wEAON,ICoDQC,EAvDO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOV,EAAP,KAAcW,EAAd,KAEA,OACE,sBAAKV,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mCAIA,cAAC,EAAD,CAAWD,MAAOA,IAElB,sBAAKC,UAAU,eAAf,UACE,wBACEW,KAAK,SACLC,QAAS,WDfVC,MAAMN,GACVO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCgBhBF,MAAK,SAAAG,GACJP,EAASO,OAGfjB,UAAU,cARZ,4BAaA,wBACEW,KAAK,SACLC,QAAS,WDvBVC,MAAMN,GACVO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASG,MAAM,EAAG,MCuBzBJ,MAAK,SAAAG,GACJP,EAASO,OAGfjB,UAAU,cARZ,gCAaA,wBACEW,KAAK,SACLC,QAAS,WD9BVC,MAAMN,GACVO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,YAAIA,GAAUI,QAAO,SAACjB,GAGtC,OAFAkB,QAAQC,IAAInB,EAAKE,OAEK,QAAfF,EAAKE,YC2BHU,MAAK,SAAAG,GACJP,EAASO,OAGfjB,UAAU,cARZ,mCCzCRsB,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d16e4b30.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({\n  goods,\n}) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: `${good.color}` }}\n          className=\"list__item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","/* eslint-disable no-console */\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(response => response.slice(0, 5));\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(response => [...response].filter((good: Good) => {\n      console.log(good.color);\n\n      return good.color === 'red';\n    }));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nimport * as goodsAPI from './api/goods';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">\n        Dynamic list of Goods\n      </h1>\n\n      <GoodsList goods={goods} />\n\n      <div className=\"app__buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            goodsAPI.getAll()\n              .then(newGoods => {\n                setGoods(newGoods);\n              });\n          }}\n          className=\"app__button\"\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            goodsAPI.get5First()\n              .then(newGoods => {\n                setGoods(newGoods);\n              });\n          }}\n          className=\"app__button\"\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            goodsAPI.getRedGoods()\n              .then(newGoods => {\n                setGoods(newGoods);\n              });\n          }}\n          className=\"app__button\"\n        >\n          Load red goods\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}